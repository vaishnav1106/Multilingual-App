{"ast":null,"code":"var _jsxFileName = \"D:\\\\rogersoft\\\\React Project\\\\multilingual-website\\\\multilingual-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { LanguageContext } from './LanguageContext';\nimport LanguageSelector from './components/LanguageSelector';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    language\n  } = useContext(LanguageContext);\n  const translations = require(`./translations/${language}.json`);\n  const [isCardVisible, setCardVisible] = useState(true);\n  useEffect(() => {\n    // Set the card visibility to true when a new language is selected\n    setCardVisible(true);\n  }, [language]);\n  const handleCardAnimationEnd = () => {\n    // Set the card visibility to false when the animation ends\n    setCardVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [isCardVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      onAnimationEnd: handleCardAnimationEnd,\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: translations.greeting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: translations.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oIw8cnlJYg8UEZzdhJjS7P8jyek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","useEffect","useState","LanguageContext","LanguageSelector","jsxDEV","_jsxDEV","App","_s","language","translations","require","isCardVisible","setCardVisible","handleCardAnimationEnd","className","children","onAnimationEnd","greeting","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["D:/rogersoft/React Project/multilingual-website/multilingual-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { LanguageContext } from './LanguageContext';\nimport LanguageSelector from './components/LanguageSelector';\nimport './App.css';\n\nconst App = () => {\n  const { language } = useContext(LanguageContext);\n  const translations = require(`./translations/${language}.json`);\n  const [isCardVisible, setCardVisible] = useState(true);\n\n  useEffect(() => {\n    // Set the card visibility to true when a new language is selected\n    setCardVisible(true);\n  }, [language]);\n\n  const handleCardAnimationEnd = () => {\n    // Set the card visibility to false when the animation ends\n    setCardVisible(false);\n  };\n\n  return (\n    <div className=\"app\">\n      {isCardVisible && (\n        <div className=\"card\" onAnimationEnd={handleCardAnimationEnd}>\n          <header>\n            <h1 className=\"title\">{translations.greeting}</h1>\n            <p className=\"subtitle\">{translations.message}</p>\n          </header>\n        </div>\n      )}\n      <LanguageSelector />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAS,CAAC,GAAGT,UAAU,CAACG,eAAe,CAAC;EAChD,MAAMO,YAAY,GAAGC,OAAO,CAAE,kBAAiBF,QAAS,OAAM,CAAC;EAC/D,MAAM,CAACG,aAAa,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACAY,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMK,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACAD,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEP,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBJ,aAAa,iBACZN,OAAA;MAAKS,SAAS,EAAC,MAAM;MAACE,cAAc,EAAEH,sBAAuB;MAAAE,QAAA,eAC3DV,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAIS,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEN,YAAY,CAACQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClDhB,OAAA;UAAGS,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEN,YAAY,CAACa;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eACDhB,OAAA,CAACF,gBAAgB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACd,EAAA,CA5BID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}